name: "release"

on:
  push:
    branches:
      - "master"

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz
          - target: x86_64-apple-darwin
            archive: zip
    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      # Install dependencies for x86_64-unknown-linux-musl, if applicable
      - name: Install dependencies
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install musl-tools -y

      - name: Compile the code
        run: |
          cargo build --release --target ${{ matrix.target }}

      # Create a release if it doesnâ€™t exist
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v1.0.0"  # Adjust as needed
          release_name: "Release v1.0.0"
          draft: false
          prerelease: false

      # Upload the compiled artifact
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "target/${{ matrix.target }}/release/gr"  # Path to your compiled binary
          asset_name: "gr-${{ matrix.target }}.${{ matrix.archive }}"  # Name of the uploaded artifact
          asset_content_type: application/octet-stream

